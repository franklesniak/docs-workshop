{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Building Beautiful Docs Workshop","text":""},{"location":"#tools","title":"Tools","text":""},{"location":"#try-this","title":"Try this","text":"<p>Stuff to try</p>"},{"location":"#copy-and-paste-this","title":"Copy and paste this","text":"<pre><code>Get-Process\n</code></pre>"},{"location":"commands/en-US/Find-DadJoke/","title":"Find-DadJoke","text":""},{"location":"commands/en-US/Find-DadJoke/#synopsis","title":"SYNOPSIS","text":"<p>Finds a matching dad joke from icanhazdadjoke.com.</p>"},{"location":"commands/en-US/Find-DadJoke/#syntax","title":"SYNTAX","text":"<pre><code>Find-DadJoke [[-Term] &lt;String&gt;] [-ProgressAction &lt;ActionPreference&gt;] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"commands/en-US/Find-DadJoke/#description","title":"DESCRIPTION","text":"<p>The <code>Find-DadJoke</code> cmdlet finds a dad joke from icanhazdadjoke.com which matches the provided term(s), or if no terms are provided, all jokes are returned.</p>"},{"location":"commands/en-US/Find-DadJoke/#examples","title":"EXAMPLES","text":""},{"location":"commands/en-US/Find-DadJoke/#example-1","title":"Example 1","text":"<pre><code>Find-DadJoke\n</code></pre> <p>Gets all dad jokes the api has to offer.</p>"},{"location":"commands/en-US/Find-DadJoke/#example-1_1","title":"Example 1","text":"<pre><code>Find-DadJoke -Term cat\n</code></pre> <p>Finds dad jokes about cats \ud83e\udd37\u200d\u2642\ufe0f</p>"},{"location":"commands/en-US/Find-DadJoke/#parameters","title":"PARAMETERS","text":""},{"location":"commands/en-US/Find-DadJoke/#-term","title":"-Term","text":"<p>A word, or words, to search for in the catalog of dad jokes.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 0\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"commands/en-US/Find-DadJoke/#-progressaction","title":"-ProgressAction","text":"<p>This common parameter is new in PowerShell 7.4, and PlatyPS v0.14.2 thinks it's one of your function's parameters. Remind me to show you how you can work around this until v2 is released.</p> <pre><code>Type: ActionPreference\nParameter Sets: (All)\nAliases: proga\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"commands/en-US/Find-DadJoke/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"commands/en-US/Find-DadJoke/#inputs","title":"INPUTS","text":""},{"location":"commands/en-US/Find-DadJoke/#none","title":"None","text":""},{"location":"commands/en-US/Find-DadJoke/#outputs","title":"OUTPUTS","text":""},{"location":"commands/en-US/Find-DadJoke/#systemstring","title":"System.String","text":""},{"location":"commands/en-US/Find-DadJoke/#notes","title":"NOTES","text":""},{"location":"commands/en-US/Find-DadJoke/#related-links","title":"RELATED LINKS","text":""},{"location":"commands/en-US/Get-DadJoke/","title":"Get-DadJoke","text":""},{"location":"commands/en-US/Get-DadJoke/#synopsis","title":"SYNOPSIS","text":"<p>Get a random dad joke, or a specific joke by Id from icanhazdadjoke.com.</p>"},{"location":"commands/en-US/Get-DadJoke/#syntax","title":"SYNTAX","text":"<pre><code>Get-DadJoke [[-JokeId] &lt;String&gt;] [-ProgressAction &lt;ActionPreference&gt;] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"commands/en-US/Get-DadJoke/#description","title":"DESCRIPTION","text":"<p>The <code>Get-DadJoke</code> cmdlet gets a random dad joke from icanhazdadjoke.com, it but won't help you \"get\" the joke. Get it?</p> <p>I know, Steven Judd is much better at this \ud83d\ude05</p>"},{"location":"commands/en-US/Get-DadJoke/#examples","title":"EXAMPLES","text":""},{"location":"commands/en-US/Get-DadJoke/#example-1","title":"Example 1","text":"<pre><code>Get-DadJoke\n</code></pre> <p>Gets a random dad joke.</p>"},{"location":"commands/en-US/Get-DadJoke/#example-2","title":"Example 2","text":"<pre><code>Get-DadJoke -Id DtWSnydN7h\n</code></pre> <p>Gets a joke about \"shells\".</p>"},{"location":"commands/en-US/Get-DadJoke/#parameters","title":"PARAMETERS","text":""},{"location":"commands/en-US/Get-DadJoke/#-jokeid","title":"-JokeId","text":"<p>The Id of a specific dad joke to get.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases: Id\n\nRequired: False\nPosition: 0\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"commands/en-US/Get-DadJoke/#-progressaction","title":"-ProgressAction","text":"<p>This common parameter is new in PowerShell 7.4, and PlatyPS v0.14.2 thinks it's one of your function's parameters. Remind me to show you how you can work around this until v2 is released.</p> <pre><code>Type: ActionPreference\nParameter Sets: (All)\nAliases: proga\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"commands/en-US/Get-DadJoke/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"commands/en-US/Get-DadJoke/#inputs","title":"INPUTS","text":""},{"location":"commands/en-US/Get-DadJoke/#none","title":"None","text":""},{"location":"commands/en-US/Get-DadJoke/#outputs","title":"OUTPUTS","text":""},{"location":"commands/en-US/Get-DadJoke/#systemstring","title":"System.String","text":""},{"location":"commands/en-US/Get-DadJoke/#notes","title":"NOTES","text":""},{"location":"commands/en-US/Get-DadJoke/#related-links","title":"RELATED LINKS","text":""},{"location":"topics/00-examples/","title":"Example Modules","text":"<p>Here are a handful of PowerShell modules with online documentation generated using MkDocs. Check out their GitHub repos to see their <code>mkdocs.yml</code> configuration and how they structure their markdown files.</p>"},{"location":"topics/00-examples/#posh-acme","title":"Posh-ACME","text":"<ul> <li> Source on GitHub</li> <li> Website</li> </ul>"},{"location":"topics/00-examples/#psappdeploytoolkit","title":"PSAppDeployToolkit","text":"<ul> <li> Source on GitHub</li> <li> Website</li> </ul>"},{"location":"topics/00-examples/#pshtml","title":"PSHTML","text":"<ul> <li> Source on GitHub</li> <li> Website</li> </ul>"},{"location":"topics/00-examples/#psrule","title":"PSRule","text":"<ul> <li> Source on GitHub</li> <li> Website</li> </ul>"},{"location":"topics/00-examples/#powervcf","title":"PowerVCF","text":"<ul> <li> Source on GitHub</li> <li> Website</li> </ul>"},{"location":"topics/01-platyps/","title":"PlatyPS","text":""},{"location":"topics/02-mkdocs/","title":"MkDocs","text":""},{"location":"topics/02-mkdocs/#introduction","title":"Introduction","text":"<p>MkDocs is a python-based static site generator that takes source files in markdown and builds beautiful, responsive, searchable websites that can be hosted anywhere.</p> <p>Follow along to familiarize yourself with the command-line interface and create a simple website from scratch with a couple commands and a little markdown.</p>"},{"location":"topics/02-mkdocs/#steps","title":"Steps","text":""},{"location":"topics/02-mkdocs/#step-1-help","title":"Step 1: Help","text":"<p>Run <code>mkdocs -h</code> to make sure mkdocs is installed and to see the CLI help. It should look like...</p> <pre><code>Usage: mkdocs [OPTIONS] COMMAND [ARGS]...\n\n  MkDocs - Project documentation with Markdown.\n\nOptions:\n  -V, --version         Show the version and exit.\n  -q, --quiet           Silence warnings\n  -v, --verbose         Enable verbose output\n  --color / --no-color  Force enable or disable color and wrapping for the output. Default is\n                        auto-detect.\n  -h, --help            Show this message and exit.\n\nCommands:\n  build      Build the MkDocs documentation\n  get-deps   Show required PyPI packages inferred from plugins in mkdocs.yml\n  gh-deploy  Deploy your documentation to GitHub Pages\n  new        Create a new MkDocs project\n  serve      Run the builtin development server\n</code></pre>"},{"location":"topics/02-mkdocs/#step-2-new-project","title":"Step 2: New project","text":"<p>Create a new MkDocs project in the sandbox folder. The <code>.gitignore</code> file ensures any new files in this folder are ignored by <code>git</code>.</p> Command<pre><code>mkdocs new ./sandbox/\n</code></pre> <p>Your <code>sandbox</code> directory now has an <code>mkdocs.yml</code> file, and a <code>docs/</code> folder with a single <code>index.md</code> file.</p> <p></p> mkdocs.yml<pre><code>site_name: My Docs\n</code></pre> docs/index.md<pre><code># Welcome to MkDocs\n\nFor full documentation visit [mkdocs.org](https://www.mkdocs.org).\n\n## Commands\n\n* `mkdocs new [dir-name]` - Create a new project.\n* `mkdocs serve` - Start the live-reloading docs server.\n* `mkdocs build` - Build the documentation site.\n* `mkdocs -h` - Print help message and exit.\n\n## Project layout\n\n    mkdocs.yml    # The configuration file.\n    docs/\n        index.md  # The documentation homepage.\n        ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"topics/02-mkdocs/#step-3-serve","title":"Step 3: Serve","text":"<p>Let's see what our new MkDocs project looks like as a website! Run the <code>mkdocs serve</code> command below, then open a browser to http://localhost:8000/ or whatever URL is provided to you if you're running this in a GitHub codespace.</p> Command<pre><code>mkdocs serve -f sandbox/mkdocs.yml # (1)!\n</code></pre> <ol> <li>mkdocs binds to 127.0.0.1:8000 by default. In some cases you may need to bind on all interfaces, or a different port. Use <code>--dev-addr 0.0.0.0:8001</code> to listen for connections on TCP port 8001 on all interfaces for example.</li> </ol> Output<pre><code>PS /workspaces/docs-workshop&gt; mkdocs serve -f ./sandbox/mkdocs.yml\nINFO    -  Building documentation...\nINFO    -  Cleaning site directory\nINFO    -  Documentation built in 0.28 seconds\nINFO    -  [19:58:02] Watching paths for changes: 'sandbox/docs', 'sandbox/mkdocs.yml'\nINFO    -  [19:58:02] Serving on http://127.0.0.1:8000/\nINFO    -  [19:58:25] Browser connected: http://localhost:8000/\nINFO    -  [19:58:28] Browser connected: http://localhost:8000/\nINFO    -  [20:06:41] Browser connected: http://localhost:8000/\n</code></pre>"},{"location":"topics/02-mkdocs/#step-4-update-content","title":"Step 4: Update content","text":""},{"location":"topics/02-mkdocs/#step-5-experiment","title":"Step 5: Experiment","text":"<p>There are a bunch of themes for MkDocs. Check out this catalog of themes as well as a variety of extensions.</p> Command<pre><code>pip install --force-reinstall mkdocs mkdocs-terminal mkdocs-dracula-theme mkdocs-simple-blog\n</code></pre> mkdocs.yml<pre><code>theme:\n  name: mkdocs # Options: mkdocs | readthedocs | material | terminal | dracula | simple-blog\n</code></pre>"},{"location":"topics/02-mkdocs/#reset","title":"Reset","text":"<pre><code>Remove-Item ./sandbox/docs/, ./sandbox/mkdocs.yml -Recurse\n</code></pre>"},{"location":"topics/03-mkdocs-material/","title":"Material for MkDocs","text":""},{"location":"topics/03-mkdocs-material/#getting-started","title":"Getting Started","text":""},{"location":"topics/03-mkdocs-material/#command-documentation","title":"Command Documentation","text":""},{"location":"topics/03-mkdocs-material/#tutorials","title":"Tutorials","text":""},{"location":"topics/03-mkdocs-material/#blogging","title":"Blogging","text":""}]}